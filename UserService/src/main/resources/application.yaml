server:
  port: 8081

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/microservices
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update

  application:
    name: USER-SERVICE
  config:
    import: optional:configserver:http://localhost:8085

#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka
#    fetch-registry: true  #default true
#    register-with-eureka: true #default true

# Configurations for actuator
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

#Configurations for Resilience4J
resilience4j:
  circuitbreaker:       #Circuitbreaker configs
    instances:
      ratingHotelBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

  retry:               #Retry configs
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 3s

  ratelimiter:        #Rate-limiter configs
    instances:
      userServiceLimiter:
        timeout-duration: 0s
        limit-for-period: 2                         # 2 requests in limit-refresh-period (4)
        limit-refresh-period: 4s

